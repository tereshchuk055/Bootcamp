@model HomeViewModel

@{
    ViewData["Title"] = "Todo App";
}

<div class="d-flex justify-content-center py-4">
    <h3 class="px-3 mt-1">Sort by category:</h3>
    <span class="badge d-flex align-items-center p-1 mx-2 px-4 border border-secondary-subtle rounded-pill">
        <a href="/" class="text-decoration-none text-light m-0 ">
            <h5 class="m-1 p-0">All</h5>
        </a>
    </span>
    
    
    @foreach (var category in Model.Categories)
    {
        <span class="badge d-flex align-items-center p-1 mx-2 px-2 border border-secondary-subtle rounded-pill">
            <form method="post" asp-controller="Home" asp-action="Sort">
                <input type="hidden" value="@category.Id" asp-for="@(new CategoryByIdViewModel().Id)">
                <button type="submit" class="m-0 p-0 bg-dark border-0" >
                    <h5 class="mt-1 mb-2 mx-2 p-0 text-light">@category.Name.ToString()</h5>
                </button>
            </form>
            <span class="vr mx-2"></span>
            <form method="post" asp-controller="Category" asp-action="Delete">
                <input type="hidden" value="@category.Id" asp-for="@(new CategoryByIdViewModel().Id)">
                <input type="submit" class="p-0" value="&#10006;" />
            </form>

        </span>
    }
</div>

<div class="text-center">
        
</div>


<div class="d-flex flex-column flex-md-row p-4 gap-4 py-md-5 align-items-center justify-content-center">
    <div class="list-group">
        @if (Model.Tasks.Count > 0)
        {
            @foreach (var task in Model.Tasks)
            {
                <label class="list-group-item d-flex flex-column">
                    <div class="d-flex flex-row justify-content-between w-100">
                        <h3 class="pe-5">
                            @task.Name.ToString() 
                        </h3>

                        <div class="d-flex flex-row p-1 ps-5">
                            <form method="post" asp-controller="Task" asp-action="ChangeCompleted" class="px-1">
                                <input type="hidden" value="@task.Id" asp-for="@Model.ChangeCompletedStateViewModel.Id">
                                <input type="hidden" value="@(!task.IsCompleted)" asp-for="@Model.ChangeCompletedStateViewModel.IsCompleted">
                                <input type="submit" value="@if(task.IsCompleted){<text>&#10006;</text>} else {<text>&#10004;</text>}" />
                            </form>

                            <form method="post" asp-controller="Task" asp-action="Delete" class="px-1">
                                <input type="hidden" value="@task.Id" asp-for="@(new DeleteTaskViewModel().Id)">
                                <input type="submit" value="&#128465" />
                            </form>
                        </div>
                    </div>
                    <div class="d-block @if(task.Deadline < DateTime.Now && !task.IsCompleted) {<text>text-danger</text>} else {<text>text-body-secondary</text>}">
                        @task.Deadline
                    </div>
                </label>
            }
        }
    </div>
</div>





